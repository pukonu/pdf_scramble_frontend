{"version":3,"sources":["store/reducers/FileReducer.js","store/reducers/index.js","config/reducer-actions.js","config/environment.js","store/actions/FileActions.js","component/generator/UploaderComponent.js","component/generator/DescriptionComponent.js","component/common/Empty.js","component/common/Loading.js","component/common/ListItem.js","component/common/List.js","component/generator/TileComponent.js","component/generator/TileGroupComponent.js","component/generator/FileGroupComponent.js","component/generator/ProcessComponent.js","component/generator/ViewGenerator.js","component/layout/Top.js","RootComponent.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","fileResponse","isFileError","isFileLoading","arrangement","combineReducers","fileReducer","state","arguments","length","undefined","actions","ret","Object","objectSpread","type","_actions$payload","payload","groupChildren","map","v","t","parseInt","id","PROTOCOL","API","development","concat","production","rxPushArrangement","__","onDrop","files","req","request","post","_this","props","rxPushResetArrangement","rxLoadFile","attach","on","err","then","res","body","react_default","a","createElement","style","marginTop","dist_es","accept","this","_ref","getRootProps","getInputProps","isDragActive","assign","baseStyle","className","classNames","dropzone--isActive","Component","width","height","padding","borderWidth","borderColor","borderStyle","borderRadius","UploaderComponent","connect","rx","DescriptionComponent","children","paddingTop","Empty","icon","text","header","addButton","marginBottom","src","alt","Loading","ListItem","dangerouslySetInnerHTML","__html","value","label","List","apiEndpoint","params","isLoading","isListLoading","serverProcessing","placeholder","data","listItems","emptyObject","limit","console","log","buildListItems","bind","setState","onLookupFromServer","nextProps","e","onItemAction","onSearch","searchValue","target","toLowerCase","newData","_","without","ob","indexOf","index","itemRenderer","Item","key","Empty_Empty","overflowY","renderListView","Loading_Loading","listTitle","menu","renderIsViewLoading","renderView","TileComponent","tileCard","paddingBottom","tilePath","color","fontSize","fontWeight","marginLeft","marginRight","backgroundColor","cursor","TileGroupComponent","custom","title","pages","renderTiles","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","folder_name","pdf_document_group","dragabbleContainer","sortable","destroy","initializeDragabble","lastOverContainer","_this2","document","querySelectorAll","Sortable","draggable","Classes","mirror","constrainDimensions","plugins","Plugins","ResizeMirror","evt","sourceContainer","i","push","getDraggableElementsForContainer","containers","folderName","dragEvent","overContainer","TileGroupComponent_TileGroupComponent","draggableClasses","fileGroupBody","renderTileGroup","capacity","FileGroupComponent","downloads","nextState","isEqual","_this$props$rx","send","filename","href","download_link","rel","download","onClick","processFile","renderDownloadLinks","ProcessComponent","ViewGenerator","DescriptionComponent_DescriptionComponent","Top","Link","to","RootComponent","Switch","Route","path","render","Top_Top","component","App","store","createStore","es","BrowserRouter","Boolean","window","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94b4c851.chunk.js","sourcesContent":["import { RX_X_FILE, RX_X_FILE_LOADING, RX_X_ARRANGEMENT, RX_X_ARRANGEMENT_RESET } from \"../../config/reducer-actions\";\n\nconst INITIAL_STATE = {\n    fileResponse: {},\n    isFileError: null,\n    isFileLoading: null,\n    arrangement: [],\n};\n\nexport default (state=INITIAL_STATE, actions) => {\n    if (actions) {\n        const ret = {...state};\n\n        switch (actions.type) {\n            case RX_X_FILE:\n                return ret;\n\n            case RX_X_FILE_LOADING:\n                const { isFileLoading, isFileError, fileResponse } = actions.payload;\n                ret[\"isFileLoading\"] = isFileLoading;\n                ret[\"isFileError\"] = isFileError;\n                ret[\"fileResponse\"] = fileResponse;\n                return ret;\n\n            case RX_X_ARRANGEMENT:\n                ret[\"arrangement\"] = actions.payload.groupChildren.map(v => v.map(t => parseInt(t.id)));\n                return ret;\n\n            case RX_X_ARRANGEMENT_RESET:\n                ret[\"arrangement\"] = [];\n                return ret;\n\n            default:\n                return state;\n        }\n    }\n\n    return state;\n}\n","import {combineReducers} from \"redux\";\nimport FileReducer from \"./FileReducer\";\n\nexport default combineReducers ({\n    fileReducer: FileReducer,\n});\n","export const RX_X_FILE = \"_rx_00_x_001\";\nexport const RX_X_FILE_LOADING = \"_rx_00_x_002\";\nexport const RX_X_ARRANGEMENT = \"_rx_00_x_003\";\nexport const RX_X_ARRANGEMENT_RESET = \"_rx_00_x_004\";","export const PROTOCOL = {\n    http: \"http\",\n    developmentPort: 80,\n    productionPort: 80,\n    // developmentServerName: \"prologicmacbookpro15.local\",\n    developmentServerName: \"vectorai.postprincipal.com\",\n    productionServerName: \"vectorai.postprincipal.com\",\n};\n\nexport const API = {\n    development: `${PROTOCOL.http}://${PROTOCOL.developmentServerName}:${PROTOCOL.developmentPort}/api`,\n    production: `${PROTOCOL.http}://${PROTOCOL.productionServerName}:${PROTOCOL.productionPort}/api`,\n};","import { RX_X_FILE, RX_X_FILE_LOADING, RX_X_ARRANGEMENT, RX_X_ARRANGEMENT_RESET } from \"../../config/reducer-actions\";\n\nexport const rxRetrieveFile = (payload) => {\n    return {\n        type: RX_X_FILE,\n        payload\n    };\n};\n\nexport const rxLoadFile = (payload) => {\n    return {\n        type: RX_X_FILE_LOADING,\n        payload\n    };\n};\n\nexport const rxPushArrangement = (payload) => {\n    return {\n        type: RX_X_ARRANGEMENT,\n        payload\n    };\n};\n\nexport const rxPushResetArrangement = () => {\n    return {\n        type: RX_X_ARRANGEMENT_RESET\n    };\n};","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport classNames from 'classnames';\nimport Dropzone from \"react-dropzone\";\nimport request from \"superagent\";\nimport {API} from \"../../config/environment\"\nimport {rxLoadFile, rxPushArrangement, rxPushResetArrangement} from \"../../store/actions/FileActions\";\n\nclass __ extends Component {\n    onDrop = (files) => {\n        const req = request.post(`${API.development}/thumbnail-generator/generate`);\n\n        this.props.rxPushResetArrangement();\n        this.props.rxLoadFile({ fileResponse: null, isFileLoading: true });\n\n        req.attach(\"pdf_file\", files[0])\n            .on('error', (err) => {\n                this.props.rxLoadFile({ fileResponse: {}, isFileLoading: null, isFileError: true })\n            })\n            .then(res => {\n                this.props.rxLoadFile({ fileResponse: res.body, isFileLoading: false })\n            });\n    };\n\n    render() {\n        return (\n            <div style={{ marginTop: 20 }}>\n                <Dropzone accept=\"application/pdf\" onDrop={this.onDrop}>\n                    {({getRootProps, getInputProps, isDragActive}) => {\n                        return (\n                            <div\n                                {...getRootProps()}\n                                style={baseStyle}\n                                className={classNames('dropzone', {'dropzone--isActive': isDragActive})}\n                            >\n                                <input {...getInputProps()} />\n                                {\n                                    isDragActive ?\n                                        <p>Drop your file here...</p> :\n                                        <p>Vector.ai Drag and drop a file here (PDF files only)</p>\n                                }\n                            </div>\n                        )\n                    }}\n                </Dropzone>\n            </div>\n        );\n    }\n}\n\nconst baseStyle = {\n    width: \"100%\",\n    height: 120,\n    padding: 30,\n    borderWidth: 2,\n    borderColor: '#666',\n    borderStyle: 'dashed',\n    borderRadius: 5\n};\n\nconst mstp = (state) => {\n    return {\n        rx: state.fileReducer,\n    }\n};\n\nconst UploaderComponent = connect(mstp, { rxLoadFile, rxPushArrangement, rxPushResetArrangement })(__);\nexport {UploaderComponent};","import React from \"react\";\nimport classNames from \"classnames\";\n\nexport const DescriptionComponent = ({ children, className }) => (\n    <div className={ classNames(className) } style={{ paddingTop: 20 }}>\n        {children}\n    </div>\n);","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\n\nexport const Empty = ({ icon, text, header, addButton }) => {\n\n    return (\n        <div className=\"col-12 mt100 pb20 div-h-100p d-flex align-content-center justify-content-center\">\n            <div>\n                <div className=\"text-center\" style={{ marginTop: 20, marginBottom: 20 }}>\n                    <img src={icon} alt=\"icon\" height={100} />\n                </div>\n                <div className=\"text-center\" style={{ marginTop: 20, marginBottom: 20 }}>\n                    <div className=\"font-open-sans fs16 mt10\">\n                        No items found\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};","import React from \"react\";\n\n\nexport const Loading = () => {\n    return (\n        <div className=\"p10 br-t\">\n            <div className=\"fs24 text-center grey50 pt40 pb40\">\n                <p className=\"fs18 mt25\">Loading...</p>\n            </div>\n        </div>\n    )\n};","import React, {Component} from 'react';\n\nclass _ListItem extends Component {\n    render() {\n        return (\n            <li className=\"list-group-item\" dangerouslySetInnerHTML={{ __html: this.props.value.label }}>\n                Something\n            </li>\n        )\n    }\n}\n\nconst ListItem = _ListItem;\nexport {ListItem};","import React, {Component} from 'react';\nimport _ from \"lodash\";\nimport {Loading} from \"./Loading\";\nimport {ListItem} from \"./ListItem\";\nimport {Empty} from \"./Empty\";\nimport {DebounceInput} from \"react-debounce-input\";\n\nclass _List extends Component {\n\n    state = {\n        apiEndpoint: null,\n        params: [],\n        isLoading: true,\n        isListLoading: false,\n        serverProcessing: false,\n        placeholder: \"search...\",\n        data: [],\n        listItems: [],\n        map: {label: \"name\"},\n        emptyObject: {\n            icon: \"/icons/file-folder1.svg\",\n            text: \"List is empty\"\n        },\n        limit: 25\n    };\n\n    componentWillMount() {\n        console.log(\"component has mounted -  List\");\n        let listItems = null;\n        if (!this.props.apiEndpoint) {\n            listItems = (this.props.data && this.props.data.length > 0) ? this.props.data.map(this.buildListItems.bind(this)) : null;\n        }\n\n        this.setState({\n            ...this.props,\n            isLoading: false,\n            listItems\n        });\n\n        if (this.props.serverProcessing) {\n            this.onLookupFromServer(\"\")\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let listItems = null;\n        if (!this.props.apiEndpoint) {\n            listItems = (nextProps.data && nextProps.data.length > 0) ? nextProps.data.map(this.buildListItems.bind(this)) : null;\n        }\n\n        this.setState({\n            ...nextProps,\n            isLoading: false,\n            listItems\n        });\n\n        if (nextProps.serverProcessing) {\n            this.onLookupFromServer(\"\")\n        }\n    }\n\n    onItemAction(e) {\n        this.props.onItemAction && this.props.onItemAction(e)\n    }\n\n    onSearch(e) {\n        if (this.props.onSearch) {\n\n            this.props.onSearch(e)\n\n        } else {\n            const searchValue = e.target.value.toLowerCase();\n\n            if (this.state.serverProcessing === false) {\n\n                // run search using the _.map function on the label,\n                // use _.without to prevent undefined value from showing in the result\n                const newData = _.without(\n                    _.map(this.state.data, ob => (ob.label.toLowerCase().indexOf(searchValue) > -1) ? ob : undefined),\n                    undefined\n                );\n\n                this.setState({\n                    listItems: newData.map(this.buildListItems)\n                });\n\n            } else {\n                this.onLookupFromServer(searchValue)\n            }\n        }\n    }\n\n    buildListItems(value, index) {\n        const { itemRenderer } = this.props;\n\n        if (itemRenderer) {\n            const Item = itemRenderer;\n            return <Item\n                {...this.props}\n                key={`key__listItem__${index}`}\n                value={value}\n                onItemAction={this.onItemAction.bind(this)} />\n        } else {\n            return <ListItem\n                {...this.props}\n                key={`key__listItem__${index}`}\n                value={value}\n                onItemAction={this.onItemAction.bind(this)} />\n        }\n    }\n\n    renderListView() {\n        if (this.state.listItems) {\n            return this.state.listItems;\n        } else {\n            return <Empty { ...this.state.emptyObject } />\n        }\n    }\n\n    renderIsViewLoading() {\n        if (this.state.isListLoading === false) {\n            return (\n                <div className=\"card-body p-0 wit-list-body pb10\" style={{ height: \"100%\", overflowY: \"scroll\" }}>\n                    <ul\n                        className=\"list-group list-group-flush br-t wit-list-content StackedList\"\n                        style={{ height: \"100%\" }}>\n\n                        {this.renderListView()}\n                    </ul>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"card-body p-0\">\n                    <Loading />\n                </div>\n            )\n        }\n    }\n\n    renderView() {\n        const { listTitle } = this.props;\n        if (this.state.isLoading === false) {\n            return (\n                <div className=\"card wit-list\" style={{ height: \"100%\" }}>\n                    <div className=\"card-header\">\n                        <div className=\"card-title\">\n                            <span className=\"font-montserrat bold fs14\">{listTitle}</span>\n                        </div>\n                        {this.props.menu}\n                    </div>\n                    {this.renderIsViewLoading()}\n                </div>\n            )\n        } else {\n            return <Loading />\n        }\n    }\n\n    render() {\n        return this.renderView()\n    }\n}\n\nconst List = _List;\nexport {List};","import React from 'react';\nimport classNames from \"classnames\";\nimport {API} from \"../../config/environment\";\n\n\nexport const TileComponent = ({ value }) => (\n    <div\n        id={value.v}\n        style={tileCard}\n        className={classNames(\"StackedListItem--isDraggable\")}>\n        <img\n            style={{ padding: 4, paddingBottom: 0, width: \"100%\" }}\n            src={`${API.development}/${value.tilePath}/tmp-${value.v}.jpg`}\n            alt={`tile ${value.v}`} />\n        <span style={{ padding: 4, paddingTop: 0, color: \"#555\", fontSize: 12, fontWeight: \"bold\" }}>Page: {value.v}</span>\n    </div>\n);\n\nconst tileCard = {\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 10,\n    borderWidth: 1,\n    backgroundColor: \"#EDEDED\",\n    borderColor: \"#CCC\",\n    cursor: \"pointer\",\n};","import React, {Component} from 'react';\nimport {Loading, List} from \"../common\";\nimport {TileComponent} from \"./TileComponent\";\n\nclass TileGroupComponent extends Component {\n\n    renderTiles() {\n        let isLoading = false;\n        if (!isLoading) {\n            return (\n                <List\n                    custom={{ type: this.props.type }}\n                    listTitle={this.props.title}\n                    itemRenderer={TileComponent}\n                    data={this.props.pages}\n                />\n            )\n        } else {\n            return <Loading />\n        }\n    }\n\n    render() {\n        return <div style={this.props.style} className={this.props.className}>{ this.renderTiles() }</div>\n    }\n}\n\nexport {TileGroupComponent};","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Sortable, Plugins} from '@shopify/draggable';\nimport {rxPushArrangement} from \"../../store/actions\";\nimport {TileGroupComponent} from \"./TileGroupComponent\";\nimport {Loading} from \"../common\";\n\nclass __ extends Component {\n\n    // get file groupings from redux\n    state = {\n        isLoading: null,\n        res: {\n            folder_name: \"\",\n            pdf_document_group: [],\n        },\n        tilePath: \"\",\n        arrangement: null,\n    };\n\n    constructor(props) {\n        super(props);\n        this.dragabbleContainer = null;\n        this.sortable = null;\n    }\n\n    componentWillUpdate() {\n        try {\n            this.sortable.destroy();\n        } catch (e) {}\n    }\n\n    componentDidUpdate() {\n        this.initializeDragabble();\n    }\n\n    initializeDragabble() {\n        this.dragabbleContainer = document.querySelectorAll('#MultipleContainers .StackedList');\n        let lastOverContainer;\n\n        if (this.dragabbleContainer.length === 0) {\n            return false;\n        }\n\n        this.sortable = new Sortable(this.dragabbleContainer, {\n            draggable: `.${Classes.draggable}`,\n            mirror: {\n                constrainDimensions: true,\n            },\n            plugins: [Plugins.ResizeMirror],\n        });\n\n        // let alphaChildren, betaChildren, gammaChildren;\n        const groupNum = 3;\n\n        // --- Draggable events --- //\n        this.sortable.on('drag:stop', (evt) => {\n            lastOverContainer = evt.sourceContainer;\n\n            // move this values into redux\n            const groupChildren = [];\n            for (let i=0; i<groupNum; i++) {\n                groupChildren.push(this.sortable.getDraggableElementsForContainer(this.sortable.containers[i]))\n            }\n            this.props.rxPushArrangement({groupChildren, folderName: this.state.res.folder_name});\n        });\n\n        this.sortable.on('sortable:sorted', (evt) => {\n            if (lastOverContainer === evt.dragEvent.overContainer) {\n                return;\n            }\n\n            lastOverContainer = evt.dragEvent.overContainer;\n        });\n\n        return this.sortable;\n    }\n\n    renderTileGroup() {\n        if (this.props.rx && this.props.rx.isFileError === true) {\n\n            return (\n                <div style={{ marginTop: 20 }} className=\"alert alert-danger\">\n                    An error occurred with your upload, file is either not a PDF document, too large or a network\n                    failure occurred\n                </div>\n            )\n\n        } else if (this.props.rx && this.props.rx.isFileLoading === true) {\n\n            return <div style={{ marginTop: 20 }}><em className=\"text-danger\">We are processing your data, please wait...</em></div>\n\n        } else if (this.props.rx && this.props.rx.isFileLoading === false) {\n            const { fileResponse } = this.props.rx;\n\n            return (\n                <div style={{ marginTop: 20 }}>\n                    <div id=\"MultipleContainers\" className=\"row\">\n                        <div className=\"col-4\">\n                            <TileGroupComponent\n                                style={draggableClasses.fileGroupBody}\n                                className=\"StackedListWrapper StackedListWrapper--sizeMedium StackedListWrapper--hasScrollIndicator Container\"\n                                title=\"Group - Alpha\"\n                                tilePath={fileResponse.folder_name}\n                                pages={fileResponse.pdf_document_group[0].map(v => { return { v, tilePath: fileResponse.folder_name }}) } />\n                        </div>\n                        <div className=\"col-4\">\n                            <TileGroupComponent\n                                style={draggableClasses.fileGroupBody}\n                                className=\"StackedListWrapper StackedListWrapper--sizeMedium StackedListWrapper--hasScrollIndicator Container\"\n                                title=\"Group - Beta\"\n                                tilePath={fileResponse.folder_name}\n                                pages={fileResponse.pdf_document_group[1].map(v => { return { v, tilePath: fileResponse.folder_name }}) } />\n                        </div>\n                        <div className=\"col-4\">\n                            <TileGroupComponent\n                                style={draggableClasses.fileGroupBody}\n                                className=\"StackedListWrapper StackedListWrapper--sizeMedium StackedListWrapper--hasScrollIndicator Container\"\n                                title=\"Group - Gamma\"\n                                tilePath={fileResponse.folder_name}\n                                pages={fileResponse.pdf_document_group[2].map(v => { return { v, tilePath: fileResponse.folder_name }})} />\n                        </div>\n                    </div>\n                </div>\n            );\n\n        } else {\n\n            return <div>&nbsp;</div>\n\n        }\n    }\n\n    render() {\n        return this.renderTileGroup()\n    }\n}\n\nconst Classes = {\n    draggable: 'StackedListItem--isDraggable',\n    capacity: 'draggable-container-parent--capacity',\n};\n\nconst draggableClasses = {\n    fileGroupBody: {\n        height: 700,\n        marginBottom: 10,\n    }\n};\n\nconst mstp = (state) => {\n    return {\n        rx: state.fileReducer,\n    }\n};\n\nconst FileGroupComponent = connect(mstp, { rxPushArrangement })(__);\nexport {FileGroupComponent};","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport _ from \"lodash\";\nimport request from \"superagent\";\nimport {API} from \"../../config/environment\";\nimport {rxPushArrangement} from \"../../store/actions\";\n\nclass __ extends Component {\n\n    state = {\n        downloads: null,\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return !_.isEqual(this.props.rx.arrangement, nextProps.rx.arrangement) ||\n            !_.isEqual(this.state.downloads, nextState.downloads);\n    }\n\n    processFile() {\n        const { fileResponse, arrangement } = this.props.rx;\n        const req = request.post(`${API.development}/thumbnail-generator/rearrange`);\n\n        req.send({arrangement, folderName: fileResponse.folder_name }).then(res => {\n            this.setState({ downloads: res.body.downloads });\n        });\n    }\n\n    renderDownloadLinks() {\n        const { downloads } = this.state;\n        const isArrangement = !!this.props.rx.arrangement.length;\n\n        if (!isArrangement) {\n\n            return <div>&nbsp;</div>;\n\n        } else if (downloads) {\n\n            return (\n                <div>\n                    Download Files:\n                    {\n                        downloads.map(\n                            v => <a\n                                key={`id__${v.filename}`}\n                                style={{marginLeft: 15}}\n                                href={v.download_link}\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                                download={`${v.filename}.pdf`} >\n                                    {v.filename}\n                            </a>\n                        )\n                    }\n                </div>\n            )\n\n        } else {\n            return (\n                <div>\n                    <div>\n                        <button className=\"btn btn-primary\" onClick={this.processFile.bind(this)}>Process Update</button>\n                    </div>\n                    <div>\n                        No file(s) to download yet, to download a file process the changes that has been made first, by\n                        clicking the <b>Process Update</b> button above\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: 20, marginBottom: 30 }}>\n                {this.renderDownloadLinks()}\n            </div>\n        );\n    }\n}\n\nconst mstp = (state) => {\n    return {\n        rx: state.fileReducer,\n    }\n};\n\nconst ProcessComponent = connect(mstp, { rxPushArrangement })(__);\nexport {ProcessComponent};","import React, {Component} from 'react';\nimport {UploaderComponent} from \"./UploaderComponent\";\nimport {DescriptionComponent} from \"./DescriptionComponent\";\nimport {FileGroupComponent} from \"./FileGroupComponent\";\nimport {ProcessComponent} from \"./ProcessComponent\";\n\nclass ViewGenerator extends Component {\n    render() {\n        return (\n            <div className=\"container\" style={{ width: 1000 }}>\n                <DescriptionComponent>\n                    This is a simple multi-page PDF file processor\n                </DescriptionComponent>\n\n                <UploaderComponent/>\n\n                <FileGroupComponent />\n\n                <DescriptionComponent>\n                    <div className=\"alert alert-info\">\n                        <em>\n                            You can rearrange each file by dragging and dropping the thumbs within each group, to other\n                            parts of the-same group or to a different group.<br/><br/>\n                            You will see a <b>Process Update</b> button after re-arranging the file\n                        </em>\n                    </div>\n                </DescriptionComponent>\n\n                <ProcessComponent />\n            </div>\n        )\n    }\n}\n\nexport {ViewGenerator}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport const Top = () => {\n    return (\n        <header>\n            <div className=\"navbar navbar-dark bg-dark shadow-sm\">\n                <div className=\"container d-flex justify-content-between\" style={{ width: 1000 }}>\n                    <Link to=\"/\" className=\"navbar-brand d-flex align-items-center\">\n                        {/* Vector logo goes here */}\n                        <strong>vector.ai</strong>\n                    </Link>\n                </div>\n            </div>\n        </header>\n    )\n};","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {ViewGenerator} from \"./component/generator\";\nimport {Top} from \"./component/layout\";\n\nconst RootComponent = () => {\n    return (\n        <div>\n            <Switch>\n                <Route path={`/(|generator|about)`} render={() => {\n                    return (\n                        <div>\n                            <div className=\"page-container\">\n                                <Top />\n                                <Switch>\n                                    <Route path=\"/\" component={ViewGenerator} />\n                                </Switch>\n                            </div>\n                        </div>\n                    )}} />\n            </Switch>\n        </div>\n    )\n};\n\nexport default RootComponent;","import React from 'react';\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport combineReducers from \"store/reducers\";\nimport RootComponent from \"./RootComponent\";\nimport './App.css';\n\nconst App = () => {\n\n    const store = createStore(combineReducers);\n\n    return (\n        <Provider store={store}>\n            <Router>\n                <Route path=\"/\" component={RootComponent} />\n            </Router>\n        </Provider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}